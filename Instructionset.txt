Registers:
General purpose (8 bit): A, B, C, D
Instruction registers (8 bit): IROP, IRA, IRB

( 0)0000####	JMP to IRA:IRB						PCjump=1, PCjrel=0, xxbus=IRA, yybus=IRB
	000X	JMP to IMM16 if CARRY=X		(JNC, JC)
	001X	JMP to IMM16 if ZERO=X		(JNZ, JZ)
	010X	JMP to IMM16 if EQUAL=X		(JNE, JE)
	0110	...
	0111	JMP to IMM16			Unconditional
	1###	JMP to PC+IRA(signed)					PCjump=1, PCjrel=1, xxbus=IRA
	100X	JMP to REL8 if CARRY=X		(JNC, JC)
	101X	JMP to REL8 if ZERO=X		(JNZ, JZ)
	110X	JMP to REL8 if EQUAL=X		(JNE, JE)
	1110	...
	1111	JMP to REL8			Unconditional
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
( 1)0001####
( 2)0010####
( 3)0011####
( 4)0100####
( 5)0101####
( 6)0110####
( 7)0111####
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ALU2dst=1, XS=R2, YS=R1, XS2xxbus=1, YS2yybus=1, Store_Flags=1
( 8)1000XXYY	CMP R1, R2						ALU_OP=SUB, ALU_Carry=0
( 9)1001XXYY	SUB R1, R2						ALU_OP=SUB, ALU_Carry=0
(10)1010XXYY	SBC R1, R2						ALU_OP=SUB, ALU_Carry=C {ALU_Carry=IROP[7]&IROP[5]}
(11)1011XXYY	ADC R1, R2						ALU_OP=ADD, ALU_Carry=C
(12)1100XXYY	ADD R1, R2						ALU_OP=ADD, ALU_Carry=0
(13)1101XXYY	XOR R1, R2						ALU_OP=XOR, ALU_Carry=*
(14)1110XXYY	AND R1, R2						ALU_OP=AND, ALU_Carry=*
(15)1111XXYY	OR  R1, R2						ALU_OP=OR,  ALU_Carry=*

ALU_Carry=* --> Carry doesnt affect result

